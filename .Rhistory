nsim=10000
#-----------------------------------#
#Distribucion Poisson:
#-----------------------------------#
rpois(nsim, 1.99)
#-----------------------------------#
#Distribucion Poisson:
#-----------------------------------#
p <- rpois(nsim, 1.99)
plot()
plot(p)
q <- table(p)
plot(q)
c <- rexp(nsim, 0.005)
d <- table(c)
plot(d)
plot(c)
plot(density(c)
plot(density(c))
plot(density(d))
plot(density(q))
c <- rexp(nsim, 0.22)
d <- table(c)
plot(density(d))
plot(d)
plot(c)
plot(density(c))
hist(density(c))
plot(p)
plot(density(p))
U <- runif(nsim,0,1)
x=0
h=0
y <- rexp(nsim,1.99)
h=h+y
x=x+1
x=1
k=1
x=1
k=1
U <- runif(nsim,0,1)
nsim=10000
U <- runif(nsim,0,1)
k=KU
k=K*U
k=k*U
#-----------------------------------#
#Distribucion Poisson:
#-----------------------------------#
P <- rpois(nsim, 1.99)
#-----------------------------------#
#Distribucion Logistic:
#-----------------------------------#
L <- rlogis(nsim,1,3)
U <- runif(nsim,0,1)
X = log((U)/(1-U))
#-----------------------------------#
#Distribucion Logistic:
#-----------------------------------#
L <- rlogis(nsim,1,3)
U <- runif(nsim,0,1)
X = log((U)/(1-U))
par(mfrow=c(1,2))
plot(L, main="Tradicional")
plot(X, main="Transformacion")
par(mfrow=c(1,2))
plot(table(L), main="Tradicional")
plot(table(X), main="Transformacion")
par(mfrow=c(1,2))
hist(table(L), main="Tradicional")
hist(table(X), main="Transformacion")
par(mfrow=c(1,2))
hist(L, main="Tradicional")
hist(X, main="Transformacion")
par(mfrow=c(1,2))
hist(L, main="Logic Tradicional")
hist(X, main="Logic Transformacion")
par(mfrow=c(1,2))
hist(density(L), main="Logic Tradicional")
hist(density(X), main="Logic Transformacion")
par(mfrow=c(1,2))
hist((L), main="Logic Tradicional")
hist((X), main="Logic Transformacion")
table(X)
table(L)
?rlogis
hist((X), main="Logic Transformacion", freq=F)
curve(dlogis(nsim,1,3), xlim=c(-5,5), col="blue",lwd=2,add=TRUE)
hist((X), main="Logic Transformacion", freq=F)
curve(dlogis(X,1,3), xlim=c(-5,5), col="blue",lwd=2,add=TRUE)
hist((X), main="Logic Transformacion", freq=F)
curve(dlogis(L,1,3), xlim=c(-5,5), col="blue",lwd=2,add=TRUE)
hist((X), main="Logic Transformacion", freq=F)
curve(dlogis(L), xlim=c(-5,5), col="blue",lwd=2,add=TRUE)
hist((X), main="Logic Transformacion", freq=F)
(dlogis(L), xlim=c(-5,5), col="blue",lwd=2,add=TRUE)
curve(dlogis(L), xlim=c(-5,5), col="blue", lwd=2, add=TRUE)
hist((X), main="Logic Transformacion", freq=F)
curve((L), xlim=c(-5,5), col="blue", lwd=2, add=TRUE)
par(mfrow=c(1,2))
hist((L), main="Logic Tradicional")
hist((X), main="Logic Transformacion", freq=F)
l <- seq(-6,6, by=0.001)
hist((X), main="Logic Transformacion", freq=F)
lines(l, dlogis(l,1,3))
l <- seq(-6,6, by=0.1)
lines(l, dlogis(l,1,3))
hist((X), main="Logic Transformacion", freq=F)
lines(l, dlogis(l,1,3))
l <- seq(-5,5, by=0.1)
hist((X), main="Logic Transformacion", freq=F)
lines(l, dlogis(l,1,3))
l <- seq(-5,5, by=1)
hist((X), main="Logic Transformacion", freq=F)
lines(l, dlogis(l,1,3))
l <- seq(-5,5, by=0.0001)
hist((X), main="Logic Transformacion", freq=F)
lines(l, dlogis(l,1,3))
l <- seq(-5,5, by=0.00000001)
l <- seq(-5,5, by=0.001)
l <- seq(-5,5, by=0.1)
l <- seq(-5,5, by=0.1)
hist((X), main="Logic Transformacion", freq=F)
lines(l, dlogis(L,1,3))
hist((X), main="Logic Transformacion", freq=F)
lines(l, dlogis(l,1,3))
hist((X), main="Logic Transformacion", freq=T)
lines(l, dlogis(l,1,3))
hist((X), main="Logic Transformacion", freq=F)
lines(l, dlogis(l,1,3))
#-----------------------------------#
#Distribucion Poisson:
#-----------------------------------#
P <- rpois(nsim, 1.99)
q <- table(P)
plot(density(p), freq=F)
#-----------------------------------#
#Distribucion Poisson:
#-----------------------------------#
P <- rpois(nsim, 1.99)
q <- table(P)
plot(density(P), freq=F)
plot(density(q))
plot((P), freq=F)
hist((P), freq=F)
plot((q), freq=F)
hist((q), freq=F)
hist((P), freq=F)
hist(P, freq=F)
plot(P, freq=F)
plot(q, freq=F)
plot(density(q))
plot(q, freq=F)
plot(q, freq=T)
#-----------------------------------#
#Distribucion Logistic:
#-----------------------------------#
L <- rlogis(nsim,7.485,0.01771)
U <- runif(nsim,0,1)
# Transformacion #
X = log((U)/(1-U))
l <- seq(-5,5, by=0.1)
hist((L), main="Logic Tradicional")
hist((X), main="Logic Transformacion", freq=F)
L2 <- rlogis(nsim,7.482,0.0256)
hist((L2), main="Logic Tradicional")
hist((L), main="Logic Tradicional")
hist((L2), main="Logic Tradicional")
l <- seq(-8,8, by=0.1)
l <- seq(-8,8, by=0.1)
hist((L), main="Logic Tradicional")
lines(l, dlogis(l,7.485,0.01771))
hist((L), main="Logic Tradicional")
lines(l, dlogis(l,7.485,0.01771))
l <- seq(-8,8, by=0.001)
hist((L), main="Logic Tradicional")
lines(l, dlogis(l,7.485,0.01771))
?loglogis
pnorm(-7.5892)
pnorm(-7.5892)*2
pchisq(46.826)
pchisq(46.826,1)
pchisq(46.826,1)*2
pchisq(46,826,1)
pchisq(46.826,1)
#Prueba de Ljung-Box:
Box.test(residuales,lag=c(1,2,3,4,5),type ="Ljung-Box")
#Ajuste del modelo completo:
Regresion<- lm(cadata$Valor_mediano_de_la_casa ~ cadata$Ingreso_mediano+cadata$Edad_mediana_de_la_vivienda+cadata$Total_de_habitaciones+cadata$Total_de_dormitorios+cadata$Poblacion+cadata$Hogares)
library("readr")
#Tarea3 Aplicada: Supuesto de independencia en los errores.
install.packages("readr")
library("readr")
cadata <- read_table2("cadata.txt")
cadata <- read.csv("~/GitHub/tarea_aplicada_3/cadata.txt", sep="")
View(cadata)
## El número aleatorio generado fue 15529 ##
# Eliminamos las filas que no necesitamos, nos quedamos con las filas desde la 15529 hasta la 16029 #
cadata<- cadata[-c(1:15528,16029:20640),]
#Ajuste del modelo completo:
Regresion<- lm(cadata$Valor_mediano_de_la_casa ~ cadata$Ingreso_mediano+cadata$Edad_mediana_de_la_vivienda+cadata$Total_de_habitaciones+cadata$Total_de_dormitorios+cadata$Poblacion+cadata$Hogares)
summary(Regresion)
#Valors ajustados y residuales del modelo:
yajustados<-fitted(Regresion)
residuales<-residuals(Regresion)
residualesx<-c()
for (i in 1:length(residuales)) {
residualesx[i]<-residuales[i-1]
}
residualesx[1]=0
cor(residuales,residualesx)
#Prueba gráfica:
x11()
acf(residuales,ci=0.95,lag.max=200,type = c("correlation"),main="Correlograma de los residuos",ylab="Autocorrelación",xlab="Retardo")
#Pruebas estaidsticas:
#Prueba de rachas:
library("tseries")
residualesfactor<-c()
for (i in 1:length(residuales)) {
if (residuales[i]>0){
residualesfactor[i]=1
}
if (residuales[i]<0){
residualesfactor[i]=-1
}
}
runs.test(factor(residualesfactor))
#Prueba de Ljung-Box:
Box.test(residuales,lag=c(1,2,3,4,5),type ="Ljung-Box")
#Prueba de Ljung-Box:
Box.test(residuales,lag=2,type ="Ljung-Box")
#Prueba de Ljung-Box:
Box.test(residuales,lag=5,type ="Ljung-Box")
#Prueba de Ljung-Box:
Box.test(residuales,lag=100,type ="Ljung-Box")
#Prueba de Ljung-Box:
Box.test(residuales,type ="Ljung-Box")
